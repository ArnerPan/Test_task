{"name": "test_link_is_direct_to_address[https://www.mos.ru/map/?collection=repair&screens=%5B%22objectsList%22%5D&categories=%5B%5D&mapParams=%7B%22cp%22%3A%7B%22lat%22%3A55.751288%2C%22lng%22%3A37.617928%7D%2C%22p1%22%3A%7B%22lat%22%3A55.79954420546492%2C%22lng%22%3A37.83760070800782%7D%2C%22p2%22%3A%7B%22lat%22%3A55.70312892423751%2C%22lng%22%3A37.39814758300782%7D%2C%22z%22%3A12%7D]", "status": "failed", "statusDetails": {"message": "AssertionError: URL IS DIFFERENT\nassert 'https://www....2z%22%3A12%7D' == 'https://www....2z%22%3A12%7D'\n  Skipping 190 identical leading characters in diff, use -v to show\n  - %22%3A55.79954420546492%2C%22lng%22%3A37.83760070800782%7D%2C%22p2%22%3A%7B%22lat%22%3A55.70312892423751%2C%22lng%22%3A37.39814758300782%7D%2C%22z%22%3A12%7D\n  ?           ^^ ^^ ^ -----                   ^  ^^ -------                                    ^^ -  ^ -----                    --------  --\n  + %22%3A55.77802118251285%2C%22lng%22%3A37.65907287597657%7D%2C%22p2%22%3A%7B%22lat%22%3A55.72459662189594%2C%22lng%22%3A37.57667541503907%7D%2C%22z%22%3A12%7D\n  ?           ^^^^^^^^ ^ ^                   ++++++ ^^^  ...\n  \n  ...Full output truncated (1 line hidden), use '-vv' to show", "trace": "should = <model.Appliccation.App object at 0x000002C118D7CDF0>\nlink = 'https://www.mos.ru/map/?collection=repair&screens=%5B%22objectsList%22%5D&categories=%5B%5D&mapParams=%7B%22cp%22%3A%...7.83760070800782%7D%2C%22p2%22%3A%7B%22lat%22%3A55.70312892423751%2C%22lng%22%3A37.39814758300782%7D%2C%22z%22%3A12%7D'\n\n    @allure.link(\"https://t.me/ArnerPan\", name=\"author\")\n    @allure.sub_suite(\"Get all links on a site, check if they direct exact to address\")\n    @allure.description(\"Check if link follows exactly to it`s URL\")\n    @allure.story(\"check every link is direct to address \")\n    @pytest.mark.parametrize('link', links)\n    def test_link_is_direct_to_address(should, link: str):\n        with allure.step(f\"Got URL {should.get_url_by_link(link)} by link {link} \"):\n>           assert should.get_url_by_link(link) == link, \"URL IS DIFFERENT\"\nE           AssertionError: URL IS DIFFERENT\nE           assert 'https://www....2z%22%3A12%7D' == 'https://www....2z%22%3A12%7D'\nE             Skipping 190 identical leading characters in diff, use -v to show\nE             - %22%3A55.79954420546492%2C%22lng%22%3A37.83760070800782%7D%2C%22p2%22%3A%7B%22lat%22%3A55.70312892423751%2C%22lng%22%3A37.39814758300782%7D%2C%22z%22%3A12%7D\nE             ?           ^^ ^^ ^ -----                   ^  ^^ -------                                    ^^ -  ^ -----                    --------  --\nE             + %22%3A55.77802118251285%2C%22lng%22%3A37.65907287597657%7D%2C%22p2%22%3A%7B%22lat%22%3A55.72459662189594%2C%22lng%22%3A37.57667541503907%7D%2C%22z%22%3A12%7D\nE             ?           ^^^^^^^^ ^ ^                   ++++++ ^^^  ...\nE             \nE             ...Full output truncated (1 line hidden), use '-vv' to show\n\ntests\\test_mos_ru_probation.py:58: AssertionError"}, "description": "Check if link follows exactly to it`s URL", "steps": [{"name": "Got URL https://www.mos.ru/map/?collection=repair&screens=%5B%22objectsList%22%5D&categories=%5B%5D&mapParams=%7B%22cp%22%3A%7B%22lat%22%3A55.751288%2C%22lng%22%3A37.617928%7D%2C%22p1%22%3A%7B%22lat%22%3A55.77802118251285%2C%22lng%22%3A37.65907287597657%7D%2C%22p2%22%3A%7B%22lat%22%3A55.72459662189594%2C%22lng%22%3A37.57667541503907%7D%2C%22z%22%3A12%7D by link https://www.mos.ru/map/?collection=repair&screens=%5B%22objectsList%22%5D&categories=%5B%5D&mapParams=%7B%22cp%22%3A%7B%22lat%22%3A55.751288%2C%22lng%22%3A37.617928%7D%2C%22p1%22%3A%7B%22lat%22%3A55.79954420546492%2C%22lng%22%3A37.83760070800782%7D%2C%22p2%22%3A%7B%22lat%22%3A55.70312892423751%2C%22lng%22%3A37.39814758300782%7D%2C%22z%22%3A12%7D ", "status": "failed", "statusDetails": {"message": "AssertionError: URL IS DIFFERENT\nassert 'https://www....2z%22%3A12%7D' == 'https://www....2z%22%3A12%7D'\n  Skipping 190 identical leading characters in diff, use -v to show\n  - %22%3A55.79954420546492%2C%22lng%22%3A37.83760070800782%7D%2C%22p2%22%3A%7B%22lat%22%3A55.70312892423751%2C%22lng%22%3A37.39814758300782%7D%2C%22z%22%3A12%7D\n  ?           ^^ ^^ ^ -----                   ^  ^^ -------                                    ^^ -  ^ -----                    --------  --\n  + %22%3A55.77802118251285%2C%22lng%22%3A37.65907287597657%7D%2C%22p2%22%3A%7B%22lat%22%3A55.72459662189594%2C%22lng%22%3A37.57667541503907%7D%2C%22z%22%3A12%7D\n  ?           ^^^^^^^^ ^ ^                   ++++++ ^^^  ...\n  \n  ...Full output truncated (1 line hidden), use '-vv' to show\n", "trace": "  File \"C:\\Users\\Sergal\\Documents\\GitHub\\TestTaskQA\\tests\\test_mos_ru_probation.py\", line 58, in test_link_is_direct_to_address\n    assert should.get_url_by_link(link) == link, \"URL IS DIFFERENT\"\n"}, "start": 1656868046788, "stop": 1656868047852}], "parameters": [{"name": "link", "value": "'https://www.mos.ru/map/?collection=repair&screens=%5B%22objectsList%22%5D&categories=%5B%5D&mapParams=%7B%22cp%22%3A%7B%22lat%22%3A55.751288%2C%22lng%22%3A37.617928%7D%2C%22p1%22%3A%7B%22lat%22%3A55.79954420546492%2C%22lng%22%3A37.83760070800782%7D%2C%22p2%22%3A%7B%22lat%22%3A55.70312892423751%2C%22lng%22%3A37.39814758300782%7D%2C%22z%22%3A12%7D'"}], "start": 1656868044607, "stop": 1656868047852, "uuid": "f8e17955-c8ae-4893-8fd2-f8302c8a1a16", "historyId": "b3c7cc3838c3dbee7e39d1dc7b94374e", "testCaseId": "f5d29af539e4b57550b6fb1fc7735560", "fullName": "tests.test_mos_ru_probation#test_link_is_direct_to_address", "labels": [{"name": "subSuite", "value": "Get all links on a site, check if they direct exact to address"}, {"name": "story", "value": "check every link is direct to address "}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_mos_ru_probation"}, {"name": "host", "value": "DESKTOP-AGKQQKC"}, {"name": "thread", "value": "18688-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_mos_ru_probation"}], "links": [{"type": "link", "url": "https://t.me/ArnerPan", "name": "author"}]}